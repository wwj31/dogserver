// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: enum.proto

package outer

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//前后端通信协议 id段 100000-1000000
type MSG int32

const (
	MSG_UNKNOWN MSG = 0
	MSG_PING    MSG = 100001
	MSG_PONG    MSG = 100002
	MSG_FAIL    MSG = 100003
	MSG_OK      MSG = 100004
	//--------------------------------------------------------------- login proto 200001-300000
	// 消息段begin
	MSG_LOGIN_SEGMENT_BEGIN MSG = 200001
	// 请求登录
	MSG_LOGIN_REQ  MSG = 200002
	MSG_LOGIN_RESP MSG = 200003
	// 消息段end
	MSG_LOGIN_SEGMENT_END MSG = 300000
	//--------------------------------------------------------------- game proto 300001-310000
	// 消息段begin
	MSG_GAME_SEGMENT_BEGIN MSG = 300001
	// 请求登录
	MSG_ENTER_GAME_REQ  MSG = 300100
	MSG_ROLE_INFO_PUSH  MSG = 300101
	MSG_ITEM_INFO_PUSH  MSG = 300102
	MSG_ENTER_GAME_RESP MSG = 300201
	// 道具
	MSG_USE_ITEM_REQ       MSG = 300301
	MSG_USE_ITEM_RESP      MSG = 300302
	MSG_ITEM_CHANGE_NOTIFY MSG = 300303
	// 邮件
	MSG_MAIL_LIST_REQ          MSG = 300401
	MSG_MAIL_LIST_RESP         MSG = 300402
	MSG_ADD_MAIL_NOTIFY        MSG = 300403
	MSG_READ_MAIL_REQ          MSG = 300404
	MSG_READ_MAIL_RESP         MSG = 300405
	MSG_RECEIVE_MAIL_ITEM_REQ  MSG = 300406
	MSG_RECEIVE_MAIL_ITEM_RESP MSG = 300407
	MSG_DELETE_MAIL_REQ        MSG = 300408
	// 聊天
	MSG_CHAT_REQ    MSG = 301000
	MSG_CHAT_NOTIFY MSG = 301001
	// 消息段end
	MSG_GAME_SEGMENT_END MSG = 310000
)

var MSG_name = map[int32]string{
	0:      "UNKNOWN",
	100001: "PING",
	100002: "PONG",
	100003: "FAIL",
	100004: "OK",
	200001: "LOGIN_SEGMENT_BEGIN",
	200002: "LOGIN_REQ",
	200003: "LOGIN_RESP",
	300000: "LOGIN_SEGMENT_END",
	300001: "GAME_SEGMENT_BEGIN",
	300100: "ENTER_GAME_REQ",
	300101: "ROLE_INFO_PUSH",
	300102: "ITEM_INFO_PUSH",
	300201: "ENTER_GAME_RESP",
	300301: "USE_ITEM_REQ",
	300302: "USE_ITEM_RESP",
	300303: "ITEM_CHANGE_NOTIFY",
	300401: "MAIL_LIST_REQ",
	300402: "MAIL_LIST_RESP",
	300403: "ADD_MAIL_NOTIFY",
	300404: "READ_MAIL_REQ",
	300405: "READ_MAIL_RESP",
	300406: "RECEIVE_MAIL_ITEM_REQ",
	300407: "RECEIVE_MAIL_ITEM_RESP",
	300408: "DELETE_MAIL_REQ",
	301000: "CHAT_REQ",
	301001: "CHAT_NOTIFY",
	310000: "GAME_SEGMENT_END",
}

var MSG_value = map[string]int32{
	"UNKNOWN":                0,
	"PING":                   100001,
	"PONG":                   100002,
	"FAIL":                   100003,
	"OK":                     100004,
	"LOGIN_SEGMENT_BEGIN":    200001,
	"LOGIN_REQ":              200002,
	"LOGIN_RESP":             200003,
	"LOGIN_SEGMENT_END":      300000,
	"GAME_SEGMENT_BEGIN":     300001,
	"ENTER_GAME_REQ":         300100,
	"ROLE_INFO_PUSH":         300101,
	"ITEM_INFO_PUSH":         300102,
	"ENTER_GAME_RESP":        300201,
	"USE_ITEM_REQ":           300301,
	"USE_ITEM_RESP":          300302,
	"ITEM_CHANGE_NOTIFY":     300303,
	"MAIL_LIST_REQ":          300401,
	"MAIL_LIST_RESP":         300402,
	"ADD_MAIL_NOTIFY":        300403,
	"READ_MAIL_REQ":          300404,
	"READ_MAIL_RESP":         300405,
	"RECEIVE_MAIL_ITEM_REQ":  300406,
	"RECEIVE_MAIL_ITEM_RESP": 300407,
	"DELETE_MAIL_REQ":        300408,
	"CHAT_REQ":               301000,
	"CHAT_NOTIFY":            301001,
	"GAME_SEGMENT_END":       310000,
}

func (x MSG) String() string {
	return proto.EnumName(MSG_name, int32(x))
}

func (MSG) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{0}
}

type Unknown struct {
}

func (m *Unknown) Reset()         { *m = Unknown{} }
func (m *Unknown) String() string { return proto.CompactTextString(m) }
func (*Unknown) ProtoMessage()    {}
func (*Unknown) Descriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{0}
}
func (m *Unknown) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Unknown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Unknown.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Unknown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unknown.Merge(m, src)
}
func (m *Unknown) XXX_Size() int {
	return m.Size()
}
func (m *Unknown) XXX_DiscardUnknown() {
	xxx_messageInfo_Unknown.DiscardUnknown(m)
}

var xxx_messageInfo_Unknown proto.InternalMessageInfo

type Ok struct {
}

func (m *Ok) Reset()         { *m = Ok{} }
func (m *Ok) String() string { return proto.CompactTextString(m) }
func (*Ok) ProtoMessage()    {}
func (*Ok) Descriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{1}
}
func (m *Ok) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Ok) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Ok.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Ok) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ok.Merge(m, src)
}
func (m *Ok) XXX_Size() int {
	return m.Size()
}
func (m *Ok) XXX_DiscardUnknown() {
	xxx_messageInfo_Ok.DiscardUnknown(m)
}

var xxx_messageInfo_Ok proto.InternalMessageInfo

type Fail struct {
	Error ERROR  `protobuf:"varint,1,opt,name=Error,proto3,enum=outer.ERROR" json:"Error,omitempty"`
	Info  string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *Fail) Reset()         { *m = Fail{} }
func (m *Fail) String() string { return proto.CompactTextString(m) }
func (*Fail) ProtoMessage()    {}
func (*Fail) Descriptor() ([]byte, []int) {
	return fileDescriptor_13a9f1b5947140c8, []int{2}
}
func (m *Fail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Fail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Fail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Fail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fail.Merge(m, src)
}
func (m *Fail) XXX_Size() int {
	return m.Size()
}
func (m *Fail) XXX_DiscardUnknown() {
	xxx_messageInfo_Fail.DiscardUnknown(m)
}

var xxx_messageInfo_Fail proto.InternalMessageInfo

func (m *Fail) GetError() ERROR {
	if m != nil {
		return m.Error
	}
	return ERROR_SUCCESS
}

func (m *Fail) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterEnum("outer.MSG", MSG_name, MSG_value)
	proto.RegisterType((*Unknown)(nil), "outer.Unknown")
	proto.RegisterType((*Ok)(nil), "outer.Ok")
	proto.RegisterType((*Fail)(nil), "outer.Fail")
}

func init() { proto.RegisterFile("enum.proto", fileDescriptor_13a9f1b5947140c8) }

var fileDescriptor_13a9f1b5947140c8 = []byte{
	// 507 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x86, 0xe3, 0x92, 0xa6, 0xcd, 0x49, 0x48, 0xa7, 0xa7, 0xb4, 0x84, 0x8b, 0xac, 0x28, 0xab,
	0x8a, 0x45, 0x90, 0x60, 0x8f, 0xe4, 0x26, 0x27, 0xce, 0xa8, 0xce, 0xd8, 0xcc, 0x38, 0x20, 0xd8,
	0x58, 0x20, 0x05, 0xa9, 0x2a, 0xc4, 0x28, 0x6a, 0xc5, 0x53, 0x04, 0x58, 0x67, 0xc7, 0x45, 0x6a,
	0xeb, 0x4d, 0x9f, 0x81, 0x7b, 0xd9, 0x75, 0xc9, 0xb2, 0x24, 0x2f, 0xc0, 0xad, 0xc0, 0x12, 0x65,
	0x26, 0x40, 0x82, 0xd8, 0x1d, 0x7f, 0xbf, 0xcf, 0x37, 0xbf, 0x34, 0x03, 0xd0, 0xee, 0x6c, 0xdf,
	0xab, 0xdc, 0xef, 0xc6, 0x5b, 0x31, 0xce, 0xc6, 0xdb, 0x5b, 0xed, 0xee, 0xd9, 0x5c, 0xbb, 0xdb,
	0x8d, 0xbb, 0x86, 0x95, 0xb3, 0x30, 0xd7, 0xea, 0x6c, 0x76, 0xe2, 0x07, 0x9d, 0x72, 0x1a, 0x66,
	0xfc, 0xcd, 0xf2, 0x15, 0x48, 0xd7, 0x6f, 0x6d, 0xdc, 0xc5, 0x32, 0xcc, 0xd2, 0xe8, 0xbf, 0xa2,
	0x55, 0xb2, 0x56, 0x0b, 0x97, 0xf2, 0x15, 0xbd, 0x5c, 0x21, 0x29, 0x7d, 0x29, 0x4d, 0x84, 0x08,
	0xe9, 0x8d, 0xce, 0x9d, 0xb8, 0x38, 0x53, 0xb2, 0x56, 0xb3, 0x52, 0xcf, 0x17, 0xde, 0xa5, 0xe1,
	0x44, 0x53, 0xb9, 0x98, 0x83, 0xb9, 0x96, 0x58, 0x17, 0xfe, 0x75, 0xc1, 0x52, 0x08, 0x90, 0x0e,
	0xb8, 0x70, 0xd9, 0x93, 0x5e, 0x46, 0xcf, 0xbe, 0x70, 0xd9, 0x53, 0x33, 0xd7, 0x1d, 0xee, 0xb1,
	0x67, 0xbd, 0x0c, 0xce, 0xc3, 0x8c, 0xbf, 0xce, 0x9e, 0xf7, 0x32, 0x78, 0x06, 0x96, 0x3c, 0xdf,
	0xe5, 0x22, 0x52, 0xe4, 0x36, 0x49, 0x84, 0xd1, 0x1a, 0xb9, 0x5c, 0xb0, 0x17, 0xfd, 0x3c, 0x2e,
	0x40, 0xd6, 0x44, 0x92, 0xae, 0xb2, 0x97, 0xfd, 0x3c, 0x32, 0x80, 0xdf, 0x40, 0x05, 0xec, 0x55,
	0x3f, 0x8f, 0xa7, 0x61, 0x71, 0x7a, 0x9b, 0x44, 0x8d, 0x1d, 0xed, 0x20, 0x16, 0x01, 0x5d, 0xa7,
	0x49, 0xff, 0x58, 0x3f, 0xee, 0x20, 0x9e, 0x82, 0x02, 0x89, 0x90, 0x64, 0xa4, 0xf3, 0x91, 0xfa,
	0xf5, 0xae, 0xa6, 0xd2, 0xf7, 0x28, 0xe2, 0xa2, 0xee, 0x47, 0x41, 0x4b, 0x35, 0xd8, 0x1b, 0x43,
	0x79, 0x48, 0xcd, 0x09, 0xfa, 0x76, 0x17, 0x71, 0x19, 0x16, 0xa6, 0x0c, 0x2a, 0x60, 0x7b, 0x7b,
	0x88, 0x08, 0xf9, 0x96, 0xa2, 0x48, 0x2f, 0x8c, 0xb4, 0xbd, 0x04, 0x71, 0x09, 0x4e, 0x4e, 0x30,
	0x15, 0xb0, 0x87, 0x89, 0xee, 0xa6, 0x41, 0xb5, 0xe1, 0x08, 0x97, 0x22, 0xe1, 0x87, 0xbc, 0x7e,
	0x83, 0x3d, 0x32, 0xbf, 0x37, 0x1d, 0xee, 0x45, 0x1e, 0x57, 0xa1, 0x76, 0x7c, 0x4e, 0x74, 0x89,
	0x49, 0xa8, 0x02, 0xf6, 0x25, 0xd1, 0x25, 0x9c, 0x5a, 0x2d, 0xd2, 0xc9, 0xd8, 0xf0, 0xd5, 0x18,
	0x24, 0x39, 0x63, 0x3e, 0x32, 0x7c, 0x33, 0x86, 0x49, 0xa8, 0x02, 0x76, 0x9c, 0x20, 0x9e, 0x83,
	0x65, 0x49, 0x55, 0xe2, 0xd7, 0xc8, 0x04, 0x7f, 0x8a, 0x7f, 0x4f, 0x10, 0xcf, 0xc3, 0xca, 0xff,
	0x42, 0x15, 0xb0, 0x1f, 0xe6, 0xf0, 0x1a, 0x79, 0x14, 0xd2, 0xdf, 0x73, 0x7e, 0x26, 0x88, 0x05,
	0x98, 0xaf, 0x36, 0x1c, 0xd3, 0xfc, 0x60, 0x1f, 0x71, 0x11, 0x72, 0xfa, 0x7b, 0xdc, 0xef, 0xfd,
	0x3e, 0xe2, 0x0a, 0xb0, 0xa9, 0x7b, 0x19, 0xdd, 0xd7, 0xa7, 0x63, 0x5c, 0x2b, 0x1d, 0x0c, 0x6c,
	0xeb, 0x70, 0x60, 0x5b, 0x47, 0x03, 0xdb, 0x7a, 0x3c, 0xb4, 0x53, 0x87, 0x43, 0x3b, 0xf5, 0x61,
	0x68, 0xa7, 0x6e, 0x66, 0x2e, 0xea, 0xc7, 0x78, 0x3b, 0xa3, 0xdf, 0xf0, 0xe5, 0x5f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x08, 0xf9, 0xff, 0x21, 0xe5, 0x02, 0x00, 0x00,
}

func (m *Unknown) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Unknown) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Unknown) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Ok) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ok) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Ok) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Fail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Fail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Fail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintEnum(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != 0 {
		i = encodeVarintEnum(dAtA, i, uint64(m.Error))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintEnum(dAtA []byte, offset int, v uint64) int {
	offset -= sovEnum(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Unknown) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Ok) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Fail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != 0 {
		n += 1 + sovEnum(uint64(m.Error))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovEnum(uint64(l))
	}
	return n
}

func sovEnum(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEnum(x uint64) (n int) {
	return sovEnum(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Unknown) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEnum
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Unknown: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Unknown: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipEnum(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEnum
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Ok) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEnum
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Ok: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Ok: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipEnum(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEnum
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Fail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEnum
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Fail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Fail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			m.Error = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEnum
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Error |= ERROR(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEnum
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEnum
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEnum
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEnum(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEnum
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEnum(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEnum
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEnum
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEnum
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEnum
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEnum
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEnum
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEnum        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEnum          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEnum = fmt.Errorf("proto: unexpected end of group")
)
