// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: fasterruntype.proto

package outer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 跑得快 扑克花色
type FasterRunPokerColorType int32

const (
	FasterRunPokerColorType_PokerUnknown FasterRunPokerColorType = 0
	FasterRunPokerColorType_Clubs        FasterRunPokerColorType = 1 // 梅花
	FasterRunPokerColorType_Diamonds     FasterRunPokerColorType = 2 // 方块
	FasterRunPokerColorType_Hearts       FasterRunPokerColorType = 3 // 红心
	FasterRunPokerColorType_Spades       FasterRunPokerColorType = 4 // 黑桃
)

// Enum value maps for FasterRunPokerColorType.
var (
	FasterRunPokerColorType_name = map[int32]string{
		0: "PokerUnknown",
		1: "Clubs",
		2: "Diamonds",
		3: "Hearts",
		4: "Spades",
	}
	FasterRunPokerColorType_value = map[string]int32{
		"PokerUnknown": 0,
		"Clubs":        1,
		"Diamonds":     2,
		"Hearts":       3,
		"Spades":       4,
	}
)

func (x FasterRunPokerColorType) Enum() *FasterRunPokerColorType {
	p := new(FasterRunPokerColorType)
	*p = x
	return p
}

func (x FasterRunPokerColorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FasterRunPokerColorType) Descriptor() protoreflect.EnumDescriptor {
	return file_fasterruntype_proto_enumTypes[0].Descriptor()
}

func (FasterRunPokerColorType) Type() protoreflect.EnumType {
	return &file_fasterruntype_proto_enumTypes[0]
}

func (x FasterRunPokerColorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FasterRunPokerColorType.Descriptor instead.
func (FasterRunPokerColorType) EnumDescriptor() ([]byte, []int) {
	return file_fasterruntype_proto_rawDescGZIP(), []int{0}
}

// 跑得快 游戏状态机
type FasterRunState int32

const (
	FasterRunState_FasterRunStateReady      FasterRunState = 0 // 准备中状态
	FasterRunState_FasterRunStateDeal       FasterRunState = 1 // 游戏开始发牌状态
	FasterRunState_FasterRunStatePlaying    FasterRunState = 2 // 游戏状态
	FasterRunState_FasterRunStateSettlement FasterRunState = 3 // 结算
)

// Enum value maps for FasterRunState.
var (
	FasterRunState_name = map[int32]string{
		0: "FasterRunStateReady",
		1: "FasterRunStateDeal",
		2: "FasterRunStatePlaying",
		3: "FasterRunStateSettlement",
	}
	FasterRunState_value = map[string]int32{
		"FasterRunStateReady":      0,
		"FasterRunStateDeal":       1,
		"FasterRunStatePlaying":    2,
		"FasterRunStateSettlement": 3,
	}
)

func (x FasterRunState) Enum() *FasterRunState {
	p := new(FasterRunState)
	*p = x
	return p
}

func (x FasterRunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FasterRunState) Descriptor() protoreflect.EnumDescriptor {
	return file_fasterruntype_proto_enumTypes[1].Descriptor()
}

func (FasterRunState) Type() protoreflect.EnumType {
	return &file_fasterruntype_proto_enumTypes[1]
}

func (x FasterRunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FasterRunState.Descriptor instead.
func (FasterRunState) EnumDescriptor() ([]byte, []int) {
	return file_fasterruntype_proto_rawDescGZIP(), []int{1}
}

// 跑得快 牌型
type FasterRunPokerCardsType int32

const (
	FasterRunPokerCardsType_FasterRunPokerCardsTypeUnknown FasterRunPokerCardsType = 0
	FasterRunPokerCardsType_FasterRunSingle                FasterRunPokerCardsType = 1  // 单张
	FasterRunPokerCardsType_FasterRunPair                  FasterRunPokerCardsType = 2  // 对子
	FasterRunPokerCardsType_FasterRunThree                 FasterRunPokerCardsType = 3  // 三张
	FasterRunPokerCardsType_FasterRunThreeWithOne          FasterRunPokerCardsType = 4  // 三带一
	FasterRunPokerCardsType_FasterRunThreeWithTwo          FasterRunPokerCardsType = 5  // 三带二
	FasterRunPokerCardsType_FasterRunStraight              FasterRunPokerCardsType = 6  // 顺子 5张起
	FasterRunPokerCardsType_FasterRunStraightPair          FasterRunPokerCardsType = 7  // 连对 至少2组点数相同的对子
	FasterRunPokerCardsType_FasterRunPlane                 FasterRunPokerCardsType = 8  // 飞机 至少2组点数相同的三张
	FasterRunPokerCardsType_FasterRunPlaneWithTow          FasterRunPokerCardsType = 9  // 飞机带翅膀，飞机的牌型上，每组三张必须带任意2张牌
	FasterRunPokerCardsType_FasterRunFourWithTwo           FasterRunPokerCardsType = 10 // 四带二 4张点数相同的牌+任意2张
	FasterRunPokerCardsType_FasterRunFourWithThree         FasterRunPokerCardsType = 11 // 四带三 4张点数相同的牌+任意3张
	FasterRunPokerCardsType_FasterRunBombs                 FasterRunPokerCardsType = 12 // 炸弹 4张点数相同的牌
)

// Enum value maps for FasterRunPokerCardsType.
var (
	FasterRunPokerCardsType_name = map[int32]string{
		0:  "FasterRunPokerCardsTypeUnknown",
		1:  "FasterRunSingle",
		2:  "FasterRunPair",
		3:  "FasterRunThree",
		4:  "FasterRunThreeWithOne",
		5:  "FasterRunThreeWithTwo",
		6:  "FasterRunStraight",
		7:  "FasterRunStraightPair",
		8:  "FasterRunPlane",
		9:  "FasterRunPlaneWithTow",
		10: "FasterRunFourWithTwo",
		11: "FasterRunFourWithThree",
		12: "FasterRunBombs",
	}
	FasterRunPokerCardsType_value = map[string]int32{
		"FasterRunPokerCardsTypeUnknown": 0,
		"FasterRunSingle":                1,
		"FasterRunPair":                  2,
		"FasterRunThree":                 3,
		"FasterRunThreeWithOne":          4,
		"FasterRunThreeWithTwo":          5,
		"FasterRunStraight":              6,
		"FasterRunStraightPair":          7,
		"FasterRunPlane":                 8,
		"FasterRunPlaneWithTow":          9,
		"FasterRunFourWithTwo":           10,
		"FasterRunFourWithThree":         11,
		"FasterRunBombs":                 12,
	}
)

func (x FasterRunPokerCardsType) Enum() *FasterRunPokerCardsType {
	p := new(FasterRunPokerCardsType)
	*p = x
	return p
}

func (x FasterRunPokerCardsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FasterRunPokerCardsType) Descriptor() protoreflect.EnumDescriptor {
	return file_fasterruntype_proto_enumTypes[2].Descriptor()
}

func (FasterRunPokerCardsType) Type() protoreflect.EnumType {
	return &file_fasterruntype_proto_enumTypes[2]
}

func (x FasterRunPokerCardsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FasterRunPokerCardsType.Descriptor instead.
func (FasterRunPokerCardsType) EnumDescriptor() ([]byte, []int) {
	return file_fasterruntype_proto_rawDescGZIP(), []int{2}
}

var File_fasterruntype_proto protoreflect.FileDescriptor

var file_fasterruntype_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x61, 0x73, 0x74, 0x65, 0x72, 0x72, 0x75, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2a, 0x5c, 0x0a, 0x17,
	0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x6f, 0x6b, 0x65, 0x72,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6c, 0x75,
	0x62, 0x73, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x73,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x72, 0x74, 0x73, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x70, 0x61, 0x64, 0x65, 0x73, 0x10, 0x04, 0x2a, 0x7a, 0x0a, 0x0e, 0x46, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x13,
	0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x2a, 0xda, 0x02, 0x0a, 0x17, 0x46, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x75, 0x6e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x50,
	0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x75, 0x6e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x10, 0x04, 0x12, 0x19, 0x0a,
	0x15, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x77, 0x6f, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x69, 0x67, 0x68, 0x74, 0x10, 0x06, 0x12,
	0x19, 0x0a, 0x15, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x72, 0x61,
	0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x69, 0x72, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x10, 0x08, 0x12, 0x19,
	0x0a, 0x15, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x77, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x46, 0x6f, 0x75, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x77,
	0x6f, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e,
	0x46, 0x6f, 0x75, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x68, 0x72, 0x65, 0x65, 0x10, 0x0b, 0x12,
	0x12, 0x0a, 0x0e, 0x46, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6d, 0x62,
	0x73, 0x10, 0x0c, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fasterruntype_proto_rawDescOnce sync.Once
	file_fasterruntype_proto_rawDescData = file_fasterruntype_proto_rawDesc
)

func file_fasterruntype_proto_rawDescGZIP() []byte {
	file_fasterruntype_proto_rawDescOnce.Do(func() {
		file_fasterruntype_proto_rawDescData = protoimpl.X.CompressGZIP(file_fasterruntype_proto_rawDescData)
	})
	return file_fasterruntype_proto_rawDescData
}

var file_fasterruntype_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_fasterruntype_proto_goTypes = []interface{}{
	(FasterRunPokerColorType)(0), // 0: outer.FasterRunPokerColorType
	(FasterRunState)(0),          // 1: outer.FasterRunState
	(FasterRunPokerCardsType)(0), // 2: outer.FasterRunPokerCardsType
}
var file_fasterruntype_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fasterruntype_proto_init() }
func file_fasterruntype_proto_init() {
	if File_fasterruntype_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fasterruntype_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fasterruntype_proto_goTypes,
		DependencyIndexes: file_fasterruntype_proto_depIdxs,
		EnumInfos:         file_fasterruntype_proto_enumTypes,
	}.Build()
	File_fasterruntype_proto = out.File
	file_fasterruntype_proto_rawDesc = nil
	file_fasterruntype_proto_goTypes = nil
	file_fasterruntype_proto_depIdxs = nil
}
