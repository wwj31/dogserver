// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: niuniu.proto

package outer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 牛牛 游戏数据
type NiuNiuGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State        NiuNiuState          `protobuf:"varint,1,opt,name=State,proto3,enum=outer.NiuNiuState" json:"State,omitempty"`                                                                               // 当前状态
	StateEnterAt int64                `protobuf:"varint,2,opt,name=StateEnterAt,proto3" json:"StateEnterAt,omitempty"`                                                                                        // 当前状态的进入时间(毫秒)
	StateEndAt   int64                `protobuf:"varint,3,opt,name=StateEndAt,proto3" json:"StateEndAt,omitempty"`                                                                                            // 当前状态的结束时间(毫秒)
	Players      []*NiuNiuPlayerInfo  `protobuf:"bytes,4,rep,name=Players,proto3" json:"Players,omitempty"`                                                                                                   // 分别代表座位的玩家,固定发10个位置 下标内容空表示无人
	MasterIndex  int32                `protobuf:"varint,5,opt,name=MasterIndex,proto3" json:"MasterIndex,omitempty"`                                                                                          // 庄家位置
	MasterTimes  map[int32]int32      `protobuf:"bytes,6,rep,name=MasterTimes,proto3" json:"MasterTimes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 每个人的抢庄倍数<位置，倍数>
	BetGold      map[int32]int64      `protobuf:"bytes,7,rep,name=BetGold,proto3" json:"BetGold,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`         // 每个人的押注金币<位置，金币>
	Settlement   *NiuNiuSettlementNtf `protobuf:"bytes,8,opt,name=Settlement,proto3" json:"Settlement,omitempty"`                                                                                             // 结算数据，仅在结算状态进入房间会发
}

func (x *NiuNiuGameInfo) Reset() {
	*x = NiuNiuGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuGameInfo) ProtoMessage() {}

func (x *NiuNiuGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuGameInfo.ProtoReflect.Descriptor instead.
func (*NiuNiuGameInfo) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{0}
}

func (x *NiuNiuGameInfo) GetState() NiuNiuState {
	if x != nil {
		return x.State
	}
	return NiuNiuState_NiuNiuStateReady
}

func (x *NiuNiuGameInfo) GetStateEnterAt() int64 {
	if x != nil {
		return x.StateEnterAt
	}
	return 0
}

func (x *NiuNiuGameInfo) GetStateEndAt() int64 {
	if x != nil {
		return x.StateEndAt
	}
	return 0
}

func (x *NiuNiuGameInfo) GetPlayers() []*NiuNiuPlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *NiuNiuGameInfo) GetMasterIndex() int32 {
	if x != nil {
		return x.MasterIndex
	}
	return 0
}

func (x *NiuNiuGameInfo) GetMasterTimes() map[int32]int32 {
	if x != nil {
		return x.MasterTimes
	}
	return nil
}

func (x *NiuNiuGameInfo) GetBetGold() map[int32]int64 {
	if x != nil {
		return x.BetGold
	}
	return nil
}

func (x *NiuNiuGameInfo) GetSettlement() *NiuNiuSettlementNtf {
	if x != nil {
		return x.Settlement
	}
	return nil
}

// 牛牛 参与游戏的玩家数据
type NiuNiuPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortId       int64 `protobuf:"varint,1,opt,name=ShortId,proto3" json:"ShortId,omitempty"`             // 参与者短ID
	Ready         bool  `protobuf:"varint,2,opt,name=Ready,proto3" json:"Ready,omitempty"`                 // true.准备、false.未准备
	ReadyExpireAt int64 `protobuf:"varint,3,opt,name=ReadyExpireAt,proto3" json:"ReadyExpireAt,omitempty"` // 准备超时时间(毫秒)
	GameCount     int32 `protobuf:"varint,4,opt,name=GameCount,proto3" json:"GameCount,omitempty"`         // 游戏局数
	// 手牌 (梅花101-113 方块201-213 红心301-313 黑桃401-413 小王516 大王517)
	// NOTE: 401:黑桃A 402:黑桃2 411:黑桃J 412:黑桃Q 413:黑桃K 其他花色同理
	HandCards  []int32           `protobuf:"varint,5,rep,packed,name=HandCards,proto3" json:"HandCards,omitempty"`
	CardsType  *NiuNiuCardsGroup `protobuf:"bytes,6,opt,name=CardsType,proto3" json:"CardsType,omitempty"`    // 亮牌后才有
	Score      int64             `protobuf:"varint,7,opt,name=Score,proto3" json:"Score,omitempty"`           // 玩家本局拥有的分数
	CanPushBet bool              `protobuf:"varint,8,opt,name=CanPushBet,proto3" json:"CanPushBet,omitempty"` // 本次押注能否推注
}

func (x *NiuNiuPlayerInfo) Reset() {
	*x = NiuNiuPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuPlayerInfo) ProtoMessage() {}

func (x *NiuNiuPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuPlayerInfo.ProtoReflect.Descriptor instead.
func (*NiuNiuPlayerInfo) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{1}
}

func (x *NiuNiuPlayerInfo) GetShortId() int64 {
	if x != nil {
		return x.ShortId
	}
	return 0
}

func (x *NiuNiuPlayerInfo) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *NiuNiuPlayerInfo) GetReadyExpireAt() int64 {
	if x != nil {
		return x.ReadyExpireAt
	}
	return 0
}

func (x *NiuNiuPlayerInfo) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *NiuNiuPlayerInfo) GetHandCards() []int32 {
	if x != nil {
		return x.HandCards
	}
	return nil
}

func (x *NiuNiuPlayerInfo) GetCardsType() *NiuNiuCardsGroup {
	if x != nil {
		return x.CardsType
	}
	return nil
}

func (x *NiuNiuPlayerInfo) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *NiuNiuPlayerInfo) GetCanPushBet() bool {
	if x != nil {
		return x.CanPushBet
	}
	return false
}

// 牌型数据
type NiuNiuCardsGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      NiuNiuPokerCardsType `protobuf:"varint,1,opt,name=Type,proto3,enum=outer.NiuNiuPokerCardsType" json:"Type,omitempty"` // 牌型
	Cards     []int32              `protobuf:"varint,2,rep,packed,name=Cards,proto3" json:"Cards,omitempty"`                        // 主牌
	SideCards []int32              `protobuf:"varint,3,rep,packed,name=SideCards,proto3" json:"SideCards,omitempty"`                // 副牌
}

func (x *NiuNiuCardsGroup) Reset() {
	*x = NiuNiuCardsGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuCardsGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuCardsGroup) ProtoMessage() {}

func (x *NiuNiuCardsGroup) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuCardsGroup.ProtoReflect.Descriptor instead.
func (*NiuNiuCardsGroup) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{2}
}

func (x *NiuNiuCardsGroup) GetType() NiuNiuPokerCardsType {
	if x != nil {
		return x.Type
	}
	return NiuNiuPokerCardsType_NiuNiuPokerCardsTypeUnknown
}

func (x *NiuNiuCardsGroup) GetCards() []int32 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *NiuNiuCardsGroup) GetSideCards() []int32 {
	if x != nil {
		return x.SideCards
	}
	return nil
}

// 抢庄操作
type NiuNiuToBeMasterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times int32 `protobuf:"varint,1,opt,name=Times,proto3" json:"Times,omitempty"` // 抢庄倍数,发几就是几倍 0.不抢
}

func (x *NiuNiuToBeMasterReq) Reset() {
	*x = NiuNiuToBeMasterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuToBeMasterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuToBeMasterReq) ProtoMessage() {}

func (x *NiuNiuToBeMasterReq) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuToBeMasterReq.ProtoReflect.Descriptor instead.
func (*NiuNiuToBeMasterReq) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{3}
}

func (x *NiuNiuToBeMasterReq) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

type NiuNiuToBeMasterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NiuNiuToBeMasterRsp) Reset() {
	*x = NiuNiuToBeMasterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuToBeMasterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuToBeMasterRsp) ProtoMessage() {}

func (x *NiuNiuToBeMasterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuToBeMasterRsp.ProtoReflect.Descriptor instead.
func (*NiuNiuToBeMasterRsp) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{4}
}

// 闲家下注
type NiuNiuToBettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gold float32 `protobuf:"fixed32,1,opt,name=Gold,proto3" json:"Gold,omitempty"` // 根据底分和选择的倍数，把押注的金额发过来,（不用扩大1000倍数）
}

func (x *NiuNiuToBettingReq) Reset() {
	*x = NiuNiuToBettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuToBettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuToBettingReq) ProtoMessage() {}

func (x *NiuNiuToBettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuToBettingReq.ProtoReflect.Descriptor instead.
func (*NiuNiuToBettingReq) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{5}
}

func (x *NiuNiuToBettingReq) GetGold() float32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

type NiuNiuToBettingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NiuNiuToBettingRsp) Reset() {
	*x = NiuNiuToBettingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuToBettingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuToBettingRsp) ProtoMessage() {}

func (x *NiuNiuToBettingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuToBettingRsp.ProtoReflect.Descriptor instead.
func (*NiuNiuToBettingRsp) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{6}
}

// 亮牌
type NiuNiuShowCardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NiuNiuShowCardsReq) Reset() {
	*x = NiuNiuShowCardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuShowCardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuShowCardsReq) ProtoMessage() {}

func (x *NiuNiuShowCardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuShowCardsReq.ProtoReflect.Descriptor instead.
func (*NiuNiuShowCardsReq) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{7}
}

type NiuNiuShowCardsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NiuNiuShowCardsRsp) Reset() {
	*x = NiuNiuShowCardsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuShowCardsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuShowCardsRsp) ProtoMessage() {}

func (x *NiuNiuShowCardsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuShowCardsRsp.ProtoReflect.Descriptor instead.
func (*NiuNiuShowCardsRsp) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{8}
}

// //////////////////////////////////////////// 游戏通知 //////////////////////////////////////////////
// 进入准备中，（房间初始状态， 结算结束后会通知）
type NiuNiuReadyNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NiuNiuReadyNtf) Reset() {
	*x = NiuNiuReadyNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuReadyNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuReadyNtf) ProtoMessage() {}

func (x *NiuNiuReadyNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuReadyNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuReadyNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{9}
}

// 开始准备倒计时通知
type NiuNiuStartCountDownNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpireAt int64 `protobuf:"varint,1,opt,name=ExpireAt,proto3" json:"ExpireAt,omitempty"` // 满足人数后，进入发牌的时间(毫秒)
}

func (x *NiuNiuStartCountDownNtf) Reset() {
	*x = NiuNiuStartCountDownNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuStartCountDownNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuStartCountDownNtf) ProtoMessage() {}

func (x *NiuNiuStartCountDownNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuStartCountDownNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuStartCountDownNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{10}
}

func (x *NiuNiuStartCountDownNtf) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

// 停止准备倒计时通知
type NiuNiuStopCountDownNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NiuNiuStopCountDownNtf) Reset() {
	*x = NiuNiuStopCountDownNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuStopCountDownNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuStopCountDownNtf) ProtoMessage() {}

func (x *NiuNiuStopCountDownNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuStopCountDownNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuStopCountDownNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{11}
}

// 开始发牌通知
type NiuNiuDealNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandCards []int32 `protobuf:"varint,1,rep,packed,name=HandCards,proto3" json:"HandCards,omitempty"` // 手牌
}

func (x *NiuNiuDealNtf) Reset() {
	*x = NiuNiuDealNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuDealNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuDealNtf) ProtoMessage() {}

func (x *NiuNiuDealNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuDealNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuDealNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{12}
}

func (x *NiuNiuDealNtf) GetHandCards() []int32 {
	if x != nil {
		return x.HandCards
	}
	return nil
}

// 开始抢庄状态通知
type NiuNiuMasterNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpireAt int64 `protobuf:"varint,1,opt,name=ExpireAt,proto3" json:"ExpireAt,omitempty"` // 抢庄结束时间(毫秒)
}

func (x *NiuNiuMasterNtf) Reset() {
	*x = NiuNiuMasterNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuMasterNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuMasterNtf) ProtoMessage() {}

func (x *NiuNiuMasterNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuMasterNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuMasterNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{13}
}

func (x *NiuNiuMasterNtf) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

// 抢庄操作广播
type NiuNiuSelectMasterNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortId int64 `protobuf:"varint,1,opt,name=ShortId,proto3" json:"ShortId,omitempty"`
	Times   int32 `protobuf:"varint,2,opt,name=Times,proto3" json:"Times,omitempty"` // 抢庄倍数
}

func (x *NiuNiuSelectMasterNtf) Reset() {
	*x = NiuNiuSelectMasterNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuSelectMasterNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuSelectMasterNtf) ProtoMessage() {}

func (x *NiuNiuSelectMasterNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuSelectMasterNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuSelectMasterNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{14}
}

func (x *NiuNiuSelectMasterNtf) GetShortId() int64 {
	if x != nil {
		return x.ShortId
	}
	return 0
}

func (x *NiuNiuSelectMasterNtf) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

// 开始押注状态通知
type NiuNiuBettingNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpireAt     int64           `protobuf:"varint,1,opt,name=ExpireAt,proto3" json:"ExpireAt,omitempty"`                                                                                                  // 押注结束时间(毫秒)
	MasterSeat   int32           `protobuf:"varint,2,opt,name=MasterSeat,proto3" json:"MasterSeat,omitempty"`                                                                                              // 抢庄结束后，确定的庄家位置
	CanPushSeats map[int32]int64 `protobuf:"bytes,3,rep,name=CanPushSeats,proto3" json:"CanPushSeats,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // <可推注的位置，上一把赢的金额>
}

func (x *NiuNiuBettingNtf) Reset() {
	*x = NiuNiuBettingNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuBettingNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuBettingNtf) ProtoMessage() {}

func (x *NiuNiuBettingNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuBettingNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuBettingNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{15}
}

func (x *NiuNiuBettingNtf) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *NiuNiuBettingNtf) GetMasterSeat() int32 {
	if x != nil {
		return x.MasterSeat
	}
	return 0
}

func (x *NiuNiuBettingNtf) GetCanPushSeats() map[int32]int64 {
	if x != nil {
		return x.CanPushSeats
	}
	return nil
}

// 押注操作广播
type NiuNiuSelectBettingNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortId int64 `protobuf:"varint,1,opt,name=ShortId,proto3" json:"ShortId,omitempty"`
	Gold    int64 `protobuf:"varint,2,opt,name=Gold,proto3" json:"Gold,omitempty"` // 押注分数
}

func (x *NiuNiuSelectBettingNtf) Reset() {
	*x = NiuNiuSelectBettingNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuSelectBettingNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuSelectBettingNtf) ProtoMessage() {}

func (x *NiuNiuSelectBettingNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuSelectBettingNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuSelectBettingNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{16}
}

func (x *NiuNiuSelectBettingNtf) GetShortId() int64 {
	if x != nil {
		return x.ShortId
	}
	return 0
}

func (x *NiuNiuSelectBettingNtf) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

// 进入搓牌状态通知
type NiuNiuShowCardsNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpireAt  int64   `protobuf:"varint,1,opt,name=ExpireAt,proto3" json:"ExpireAt,omitempty"`          // 押注结束时间(毫秒)
	HandCards []int32 `protobuf:"varint,2,rep,packed,name=HandCards,proto3" json:"HandCards,omitempty"` // 自己的最新手牌
}

func (x *NiuNiuShowCardsNtf) Reset() {
	*x = NiuNiuShowCardsNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuShowCardsNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuShowCardsNtf) ProtoMessage() {}

func (x *NiuNiuShowCardsNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuShowCardsNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuShowCardsNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{17}
}

func (x *NiuNiuShowCardsNtf) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *NiuNiuShowCardsNtf) GetHandCards() []int32 {
	if x != nil {
		return x.HandCards
	}
	return nil
}

// 亮牌通知
type NiuNiuFinishShowCardsNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortId   int64             `protobuf:"varint,1,opt,name=ShortId,proto3" json:"ShortId,omitempty"`            // 亮牌的玩家
	HandCards []int32           `protobuf:"varint,2,rep,packed,name=HandCards,proto3" json:"HandCards,omitempty"` // 亮牌玩家的手牌
	CardsType *NiuNiuCardsGroup `protobuf:"bytes,3,opt,name=CardsType,proto3" json:"CardsType,omitempty"`         // 手牌牌行
}

func (x *NiuNiuFinishShowCardsNtf) Reset() {
	*x = NiuNiuFinishShowCardsNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuFinishShowCardsNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuFinishShowCardsNtf) ProtoMessage() {}

func (x *NiuNiuFinishShowCardsNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuFinishShowCardsNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuFinishShowCardsNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{18}
}

func (x *NiuNiuFinishShowCardsNtf) GetShortId() int64 {
	if x != nil {
		return x.ShortId
	}
	return 0
}

func (x *NiuNiuFinishShowCardsNtf) GetHandCards() []int32 {
	if x != nil {
		return x.HandCards
	}
	return nil
}

func (x *NiuNiuFinishShowCardsNtf) GetCardsType() *NiuNiuCardsGroup {
	if x != nil {
		return x.CardsType
	}
	return nil
}

// 全部亮牌结算通知
type NiuNiuSettlementNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSettlementAt int64               `protobuf:"varint,1,opt,name=GameSettlementAt,proto3" json:"GameSettlementAt,omitempty"`                                                                            // 结算开始时间
	EndAt            int64               `protobuf:"varint,2,opt,name=EndAt,proto3" json:"EndAt,omitempty"`                                                                                                  // 结算结束时间
	Players          []*NiuNiuPlayerInfo `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`                                                                                               // 亮牌后的信息
	WinScores        map[int32]int64     `protobuf:"bytes,4,rep,name=WinScores,proto3" json:"WinScores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 每个位置的玩家总输赢,正数是赢，负数是输
}

func (x *NiuNiuSettlementNtf) Reset() {
	*x = NiuNiuSettlementNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiuNiuSettlementNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiuNiuSettlementNtf) ProtoMessage() {}

func (x *NiuNiuSettlementNtf) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiuNiuSettlementNtf.ProtoReflect.Descriptor instead.
func (*NiuNiuSettlementNtf) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{19}
}

func (x *NiuNiuSettlementNtf) GetGameSettlementAt() int64 {
	if x != nil {
		return x.GameSettlementAt
	}
	return 0
}

func (x *NiuNiuSettlementNtf) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *NiuNiuSettlementNtf) GetPlayers() []*NiuNiuPlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *NiuNiuSettlementNtf) GetWinScores() map[int32]int64 {
	if x != nil {
		return x.WinScores
	}
	return nil
}

var File_niuniu_proto protoreflect.FileDescriptor

var file_niuniu_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x1a, 0x10, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x04, 0x0a, 0x0e, 0x4e, 0x69, 0x75, 0x4e,
	0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x48, 0x0a,
	0x0b, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x69, 0x75, 0x4e, 0x69,
	0x75, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x47, 0x6f,
	0x6c, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x2e, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x42, 0x65, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x42, 0x65,
	0x74, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x74, 0x66, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x42, 0x65, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x91, 0x02,
	0x0a, 0x10, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e,
	0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x43, 0x61, 0x72, 0x64, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x42, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x42, 0x65,
	0x74, 0x22, 0x77, 0x0a, 0x10, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x69, 0x75, 0x4e,
	0x69, 0x75, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x69, 0x64, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x09, 0x53, 0x69, 0x64, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x13, 0x4e, 0x69,
	0x75, 0x4e, 0x69, 0x75, 0x54, 0x6f, 0x42, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x4e, 0x69, 0x75, 0x4e, 0x69,
	0x75, 0x54, 0x6f, 0x42, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x28,
	0x0a, 0x12, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x54, 0x6f, 0x42, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x69, 0x75, 0x4e,
	0x69, 0x75, 0x54, 0x6f, 0x42, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x22, 0x14,
	0x0a, 0x12, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x68,
	0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x73, 0x70, 0x22, 0x10, 0x0a, 0x0e, 0x4e, 0x69,
	0x75, 0x4e, 0x69, 0x75, 0x52, 0x65, 0x61, 0x64, 0x79, 0x4e, 0x74, 0x66, 0x22, 0x35, 0x0a, 0x17,
	0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x4e, 0x74, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x41, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x74, 0x6f,
	0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4e, 0x74, 0x66, 0x22, 0x2d, 0x0a,
	0x0d, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x44, 0x65, 0x61, 0x6c, 0x4e, 0x74, 0x66, 0x12, 0x1c,
	0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x0f,
	0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x74, 0x66, 0x12,
	0x1a, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x4e,
	0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x74, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x10, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x42,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x74, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x61, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68,
	0x53, 0x65, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x42, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4e, 0x74, 0x66, 0x2e, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x61, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x61, 0x74, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x46, 0x0a, 0x16, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x74, 0x66, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x22, 0x4e, 0x0a,
	0x12, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x4e, 0x74, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x89, 0x01,
	0x0a, 0x18, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x68,
	0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x73, 0x4e, 0x74, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x69,
	0x75, 0x4e, 0x69, 0x75, 0x43, 0x61, 0x72, 0x64, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x13, 0x4e, 0x69,
	0x75, 0x4e, 0x69, 0x75, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x74,
	0x66, 0x12, 0x2a, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x45, 0x6e,
	0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x69, 0x75,
	0x4e, 0x69, 0x75, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x4e, 0x69, 0x75, 0x4e, 0x69, 0x75, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x74, 0x66, 0x2e, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a,
	0x3c, 0x0a, 0x0e, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x5a,
	0x06, 0x2f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_niuniu_proto_rawDescOnce sync.Once
	file_niuniu_proto_rawDescData = file_niuniu_proto_rawDesc
)

func file_niuniu_proto_rawDescGZIP() []byte {
	file_niuniu_proto_rawDescOnce.Do(func() {
		file_niuniu_proto_rawDescData = protoimpl.X.CompressGZIP(file_niuniu_proto_rawDescData)
	})
	return file_niuniu_proto_rawDescData
}

var file_niuniu_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_niuniu_proto_goTypes = []interface{}{
	(*NiuNiuGameInfo)(nil),           // 0: outer.NiuNiuGameInfo
	(*NiuNiuPlayerInfo)(nil),         // 1: outer.NiuNiuPlayerInfo
	(*NiuNiuCardsGroup)(nil),         // 2: outer.NiuNiuCardsGroup
	(*NiuNiuToBeMasterReq)(nil),      // 3: outer.NiuNiuToBeMasterReq
	(*NiuNiuToBeMasterRsp)(nil),      // 4: outer.NiuNiuToBeMasterRsp
	(*NiuNiuToBettingReq)(nil),       // 5: outer.NiuNiuToBettingReq
	(*NiuNiuToBettingRsp)(nil),       // 6: outer.NiuNiuToBettingRsp
	(*NiuNiuShowCardsReq)(nil),       // 7: outer.NiuNiuShowCardsReq
	(*NiuNiuShowCardsRsp)(nil),       // 8: outer.NiuNiuShowCardsRsp
	(*NiuNiuReadyNtf)(nil),           // 9: outer.NiuNiuReadyNtf
	(*NiuNiuStartCountDownNtf)(nil),  // 10: outer.NiuNiuStartCountDownNtf
	(*NiuNiuStopCountDownNtf)(nil),   // 11: outer.NiuNiuStopCountDownNtf
	(*NiuNiuDealNtf)(nil),            // 12: outer.NiuNiuDealNtf
	(*NiuNiuMasterNtf)(nil),          // 13: outer.NiuNiuMasterNtf
	(*NiuNiuSelectMasterNtf)(nil),    // 14: outer.NiuNiuSelectMasterNtf
	(*NiuNiuBettingNtf)(nil),         // 15: outer.NiuNiuBettingNtf
	(*NiuNiuSelectBettingNtf)(nil),   // 16: outer.NiuNiuSelectBettingNtf
	(*NiuNiuShowCardsNtf)(nil),       // 17: outer.NiuNiuShowCardsNtf
	(*NiuNiuFinishShowCardsNtf)(nil), // 18: outer.NiuNiuFinishShowCardsNtf
	(*NiuNiuSettlementNtf)(nil),      // 19: outer.NiuNiuSettlementNtf
	nil,                              // 20: outer.NiuNiuGameInfo.MasterTimesEntry
	nil,                              // 21: outer.NiuNiuGameInfo.BetGoldEntry
	nil,                              // 22: outer.NiuNiuBettingNtf.CanPushSeatsEntry
	nil,                              // 23: outer.NiuNiuSettlementNtf.WinScoresEntry
	(NiuNiuState)(0),                 // 24: outer.NiuNiuState
	(NiuNiuPokerCardsType)(0),        // 25: outer.NiuNiuPokerCardsType
}
var file_niuniu_proto_depIdxs = []int32{
	24, // 0: outer.NiuNiuGameInfo.State:type_name -> outer.NiuNiuState
	1,  // 1: outer.NiuNiuGameInfo.Players:type_name -> outer.NiuNiuPlayerInfo
	20, // 2: outer.NiuNiuGameInfo.MasterTimes:type_name -> outer.NiuNiuGameInfo.MasterTimesEntry
	21, // 3: outer.NiuNiuGameInfo.BetGold:type_name -> outer.NiuNiuGameInfo.BetGoldEntry
	19, // 4: outer.NiuNiuGameInfo.Settlement:type_name -> outer.NiuNiuSettlementNtf
	2,  // 5: outer.NiuNiuPlayerInfo.CardsType:type_name -> outer.NiuNiuCardsGroup
	25, // 6: outer.NiuNiuCardsGroup.Type:type_name -> outer.NiuNiuPokerCardsType
	22, // 7: outer.NiuNiuBettingNtf.CanPushSeats:type_name -> outer.NiuNiuBettingNtf.CanPushSeatsEntry
	2,  // 8: outer.NiuNiuFinishShowCardsNtf.CardsType:type_name -> outer.NiuNiuCardsGroup
	1,  // 9: outer.NiuNiuSettlementNtf.players:type_name -> outer.NiuNiuPlayerInfo
	23, // 10: outer.NiuNiuSettlementNtf.WinScores:type_name -> outer.NiuNiuSettlementNtf.WinScoresEntry
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_niuniu_proto_init() }
func file_niuniu_proto_init() {
	if File_niuniu_proto != nil {
		return
	}
	file_niuniutype_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_niuniu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuCardsGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuToBeMasterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuToBeMasterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuToBettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuToBettingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuShowCardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuShowCardsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuReadyNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuStartCountDownNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuStopCountDownNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuDealNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuMasterNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuSelectMasterNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuBettingNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuSelectBettingNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuShowCardsNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuFinishShowCardsNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiuNiuSettlementNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_niuniu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_niuniu_proto_goTypes,
		DependencyIndexes: file_niuniu_proto_depIdxs,
		MessageInfos:      file_niuniu_proto_msgTypes,
	}.Build()
	File_niuniu_proto = out.File
	file_niuniu_proto_rawDesc = nil
	file_niuniu_proto_goTypes = nil
	file_niuniu_proto_depIdxs = nil
}
