// Code generated by "spawner -pool=false"; DO NOT EDIT.

package outer

type factory func() interface{}

func Spawner(name string, newPool ...bool) (interface{}, bool) {
	f, ok := spawner[name]
	if !ok {
		return nil, ok
	}
	return f(), true
}

func Put(name string, x interface{}) {}

var spawner = map[string]factory{
	"outer.Base":               func() interface{} { return &Base{} },
	"outer.Unknown":            func() interface{} { return &Unknown{} },
	"outer.FailRsp":            func() interface{} { return &FailRsp{} },
	"outer.HeartRsp":           func() interface{} { return &HeartRsp{} },
	"outer.HeartReq":           func() interface{} { return &HeartReq{} },
	"outer.LoginReq":           func() interface{} { return &LoginReq{} },
	"outer.EnterGameReq":       func() interface{} { return &EnterGameReq{} },
	"outer.RoleInfo":           func() interface{} { return &RoleInfo{} },
	"outer.LoginRsp":           func() interface{} { return &LoginRsp{} },
	"outer.EnterGameRsp":       func() interface{} { return &EnterGameRsp{} },
	"outer.MailListRsp":        func() interface{} { return &MailListRsp{} },
	"outer.ReadMailReq":        func() interface{} { return &ReadMailReq{} },
	"outer.ReceiveMailItemReq": func() interface{} { return &ReceiveMailItemReq{} },
	"outer.Mail":               func() interface{} { return &Mail{} },
	"outer.MailInfo":           func() interface{} { return &MailInfo{} },
	"outer.ReadMailRsp":        func() interface{} { return &ReadMailRsp{} },
	"outer.MailListReq":        func() interface{} { return &MailListReq{} },
	"outer.AddMailNotify":      func() interface{} { return &AddMailNotify{} },
	"outer.ReceiveMailItemRsp": func() interface{} { return &ReceiveMailItemRsp{} },
	"outer.DeleteMailReq":      func() interface{} { return &DeleteMailReq{} },
}
