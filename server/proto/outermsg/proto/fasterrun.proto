syntax = "proto3";
package outer;
option  go_package = "/outer";

import "fasterruntype.proto";

// 跑的快 协议 (Faster Run)

// 跑得快 游戏数据
message FasterRunGameInfo {
    FasterRunState               State            = 1; // 当前状态
    int64                        StateEnterAt     = 2; // 当前状态的进入时间(毫秒)
    int64                        StateEndAt       = 3; // 当前状态的结束时间(毫秒)
    int32                        GameCount        = 4; // 游戏局数
    repeated FasterRunPlayerInfo Players          = 5; // 分别代表0-2号座位的玩家
    int32                        MasterIndex      = 7; // 庄家位置 (0-2)
    repeated PlayCardsHistory    History          = 13; // 出牌历史
    int64                        ActionShortId    = 14; // 当前操作者
    int64                        ActionEndAt      = 15; // 操作结束时间(毫秒)
}

// 跑得快 参与游戏的玩家数据
message FasterRunPlayerInfo {
    int64               ShortId        = 1; // 参与者短ID
    bool                Ready          = 2; // true.准备、false.未准备
    int64               ReadyExpireAt  = 3; // 准备超时时间(毫秒)

    // 手牌 (梅花103-114 方块203-214 红心303-314 黑桃403-415)
    // 黑桃J:411,黑桃Q:412,黑桃K:413,黑桃A:414 黑桃2:415
    repeated int32      Cards          = 4;

    int64               Score          = 5;// 玩家本局拥有的分数
}

// 牌型
message FasterRunCardsGroup {
    FasterRunPokerCardsType Type = 1;// 牌型
    repeated int32 Cards         = 2;// 主牌
    repeated int32 SideCards     = 3;// 副牌
}

// 历史出牌记录
message PlayCardsHistory {
    int64               ShortId = 1; // 出牌人
    bool                Follow  = 2; // true.跟牌出牌，true.有牌权出牌
    FasterRunCardsGroup Records = 3; // 出牌记录,nil表示过
    int64               PlayAt  = 4; // 出牌时间
}

////////////////////////////////////////////// 游戏操作请求 //////////////////////////////////////////////
// 准备\取消
message FasterRunReadyReq {// tag:gambling
    bool Ready = 1; // true.准备、false.取消准备
}
message FasterRunReadyRsp {
    bool Ready = 1;
}

// 出牌
message FasterRunPlayCardReq {// tag:gambling
    int32 Index = 1;// 手牌下标 0开始
}
message FasterRunPlayCardRsp {
}

////////////////////////////////////////////// 游戏通知 //////////////////////////////////////////////
message FasterRunPlayerReadyNtf {// 房间内玩家准备、取消准备通知
    int64 ShortId = 1;
    bool  Ready   = 2; // true.准备、false.未准备
}

// 进入准备中，（房间初始状态， 结算结束后会通知）
message FasterRunReadyNtf {
    int64 ReadyExpireAt = 1;// 结算后重新进入准备状态，所有玩家统一准备超时时间(毫秒)
}

// 开始发牌通知
message FasterRunDealNtf {
    repeated int32 Cards   = 1; // 手牌 (萬11-19 条21-29 筒31-39)
    int32 MasterSeat       = 2; // 庄家位置
}

// 开始游戏通知
message FasterRunPlayingNtf {
}

// 玩家轮动通知
message FasterRunPlayCardNtf {
    int32          TotalCards          = 1; // 剩余总牌数
    int64          ActionEndAt         = 3; // 操作结束时间(毫秒)
    bool           FirstPlay           = 4; // true.首轮出牌、false.跟牌

    // 跟牌操作，展示出牌人信息
    repeated int32 PlayedCard          = 5; // 打出去的牌
    int64          ShortIdOfPlayed     = 6; // 出牌的人

    // 需要行动的下一位玩家
    int64          ShortIdOfNextPlay   = 7; // 下一位需要出牌的人
}



// 结算玩家数据
message FasterRunSettlementPlayerData{
    FasterRunPlayerInfo Player            = 1; //

    // 胡牌信息
    int32      DianPaoSeatIndex           = 2; // 点炮的人位置，如果是自己，表示自摸
    map<int32, int64> HuWinScoreSeatIndex = 3; // 胡牌赢得的每家分数 map<赔钱的位置，赔的分>

    // 被杠的信息
    map<int32,int64> ByDarkGangSeatIndex  = 4; // 被哪些人暗杠，map<杠的玩家位置，赔的分>
    map<int32,int64> ByLightGangSeatIndex = 5; // 被哪些人明杠，map<杠的玩家位置，赔的分>
    int32 TotalFan                        = 6; // 总番数
    int64 TotalScore                      = 7; // 总输赢 负数为输
}

// 结算通知
message FasterRunSettlementNtf {
    int64    EndAt                                     = 1; // 结算结束时间
    bool     NotHu                                     = 2;  // true.流局
    bool     HasScoreZero                              = 3;  // 玩家分输光了，提前进入结算(只有在房间选择不允许负分的时候生效)
    repeated FasterRunSettlementPlayerData PlayerData = 4; // 东南西北四个方位玩家结算数据
    int32    GameCount                                 = 5; // 游戏局数
    int64    GameSettlementAt                          = 6; // 结算开始时间
    repeated int32 HuSeatIndex                         = 7; // 胡牌的位置,按胡牌先后位置排序
    repeated int32 NotTingSeat                         = 8; // 哪些位置没听牌
    repeated int32 PigSeat                             = 9; // 哪些位置是花猪
    FasterRunFinialSettlement FinalSettlement         = 10; // 非大结算，值为null
}

// 大结算信息
message FasterRunFinialSettlement {
    repeated FasterRunFinialPlayerInfo PlayerInfo = 1; // 东南西北4个玩家的大结算信息
}

message FasterRunFinialPlayerInfo {
    int64 TotalScore     = 1; // 总输赢，负分表示输
}