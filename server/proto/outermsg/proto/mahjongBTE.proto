syntax = "proto3";
package outer;
option  go_package = "/outer";

import "mahjongtype.proto";

// 麻将-血战到底 协议 (Mahjong-Battle to the End)

// 血战到底 游戏数据
message MahjongBTEGameInfo {
    MahjongBTEState            State            = 1; // 当前状态
    int64                      StateEnterAt     = 2; // 当前状态的进入时间(毫秒)
    int64                      StateEndAt       = 3; // 当前状态的结束时间(毫秒)
    repeated MahjongPlayerInfo Players          = 4; // 东南西北 四方玩家信息
    repeated int32             Dices            = 5; // 定庄的2颗骰子数
    int32                      MasterIndex      = 6; // 庄家位置 东南西北(0-3)
    Exchange3Info              Ex3Info          = 7; // 换三张数据
    int32                      TotalCardsCount  = 8; // 剩余总牌数
    repeated int32             CardsPlayHistory = 9; // 出牌历史记录
    repeated int32             CardsPlayOrder   = 10; // 出牌顺序
    int64                      ActionShortId    = 11; // 当前操作者
    int64                      ActionEndAt      = 12; // 操作结束时间(毫秒)
    repeated int32             HuSeats          = 13; // 当前胡牌的座位,按先后顺序加入

    // 以下数据只发操作者本人
    repeated ActionType ActionType              = 14; // 可操作类型，1.碰、2.杠、3.胡、4.出牌
    repeated HuType     HuType                  = 15; // 可胡牌的类型
    repeated int32      GangCards               = 16; // 可杠的牌 出牌时，手牌中可能已经存在多副杠牌
    int32               NewCard                 = 17; // 摸得的牌
}

// 血战到底 参与游戏的玩家数据
message MahjongPlayerInfo {
    int64      ShortId        = 1; // 参与者短ID
    bool       Ready          = 2; // true.准备、false.未准备
    int64      ReadyExpireAt  = 3; // 准备超时时间(毫秒)
    bool       Exchange3Ready = 4; // 换三张玩家 确认状态 true.确认、false.未确认
    ColorType  DecideColor    = 5; // 定缺花色
    CardsOfBTE AllCards       = 6; // 玩家的所有牌，手牌、碰、杠
    HuType     HuType         = 7; // 胡牌类型
    ExtraType  HuExtraType    = 8; // 胡牌额外加番
    int32      HuCard         = 9; // 胡的那张牌
    int32      HuGen          = 10;// 胡牌的根数
    int64      Score          = 11;// 玩家本局拥有的分数
}

// 血战到底 换三张数据
message Exchange3Info {
    repeated int32 CardsFrom     = 1; // 得到的牌
    int32          FromSeatIndex = 2; // 谁给的

    repeated int32 CardsTo       = 3; // 给出去的牌
    int32          ToSeatIndex   = 4; // 给谁
}

// 血战到底 牌数据
message CardsOfBTE {
    repeated int32 Cards           = 1; // 手牌 (萬11-19 条21-29 筒31-39)
    map<int32,int64> LightGang     = 2; // 明杠 map<牌, 点杠的人>
    repeated int32 DarkGang        = 3; // 暗杠 牌
    map<int32,int64> Pong          = 4; // 碰
}

// 最后一位操作牌的人(摸牌、出牌、明杠(下杠))
message LatestOperaCard {
    int32 Card     = 1;
    int64 ShortId  = 2;
    int32 Typ      = 3; // 1.摸牌、2.出牌、3.杠
}
////////////////////////////////////////////// 游戏操作请求 //////////////////////////////////////////////
// 准备\取消
message MahjongBTEReadyReq {// tag:gambling
    bool Ready = 1; // true.准备、false.取消准备
}
message MahjongBTEReadyRsp {
    bool Ready = 1;
}

// 换三张确定
message MahjongBTEExchange3Req {// tag:gambling
    repeated int32 Index = 1; // 13张牌下标 0~12
}
message MahjongBTEExchange3Rsp {
}

// 定缺确定
message MahjongBTEDecideIgnoreReq {// tag:gambling
    ColorType color = 1;
}
message MahjongBTEDecideIgnoreRsp {
}

// 出牌
message MahjongBTEPlayCardReq {// tag:gambling
    int32 Index = 1;// 手牌下标 0开始
}
message MahjongBTEPlayCardRsp {
    CardsOfBTE AllCards = 1; // 玩家的所有牌，手牌、碰、杠
}

// 执行操作 过、碰、杠、胡
message MahjongBTEOperateReq {// tag:gambling
    ActionType ActionType = 1;
    HuType     Hu         = 2; // 胡的牌型
    int32      Gang       = 3; // 杠的牌
}
message MahjongBTEOperateRsp {
    CardsOfBTE AllCards  = 1; // 玩家的所有牌，手牌、碰、杠
}


////////////////////////////////////////////// 游戏通知 //////////////////////////////////////////////
message MahjongBTEPlayerReadyNtf {// 房间内玩家准备、取消准备通知
    int64 ShortId = 1;
    bool  Ready   = 2; // true.准备、false.未准备
}

// 进入准备中，（房间初始状态， 结算结束后会通知）
message MahjongBTEReadyNtf {
    int64 ReadyExpireAt = 1;// 结算后重新进入准备状态，所有玩家统一准备超时时间(毫秒)
}

// 开始定庄
message MahjongBTEDecideMasterNtf {
    repeated int32 Dices       = 1; // 两颗骰子数
    int32          MasterIndex = 2; // 庄家位置 0,1,2,3
}

// 开始发牌通知
message MahjongBTEDealNtf {
    repeated int32 Cards   = 1; // 手牌 (萬11-19 条21-29 筒31-39)
    int32 MasterSeat       = 2; // 庄家位置
}

// 开始换三张
message MahjongBTEExchange3Ntf {
    int64          EndAt    = 1; // 换三张倒计时结束时间 (毫秒)
}

// 换三张 玩家确认通知
message MahjongBTEExchange3PlayerReadyNtf {
    int64 ShortId = 1;
}
// 换三张结束
message MahjongBTEExchange3EndNtf {
    Exchange3Info  Ex3Info      = 1; // 换牌信息
    repeated int32 Cards        = 2; // 最新手牌 (萬11-19 条21-29 筒31-39)
}

// 开始定缺通知
message MahjongBTEDecideIgnoreNtf {
    int64          EndAt    = 1; // 定缺倒计时结束时间 (毫秒)
}

// 玩家定缺确认通知
message MahjongBTEDecideIgnoreReadyNtf {
    int64 ShortId = 1;
}
// 定缺结束
message MahjongBTEDecideIgnoreEndNtf {
    map<int64, ColorType> Colors = 1; // 每位玩家的定缺花色 map<短ID，定缺花色>
}

// 开始游戏通知
message MahjongBTEPlayingNtf {
}

// 玩家轮动通知
message MahjongBTETurnNtf {
    int32      TotalCards          = 1; // 剩余总牌数
    int64      ActionShortId       = 2; // 操作者 如果是0，表示等待其他玩家碰、杠、胡、过、操作
    int64      ActionEndAt         = 3; // 操作结束时间(毫秒)
    // 以下数据只发操作者本人
    repeated ActionType ActionType  = 4; // 可操作类型，1.碰、2.杠、3.胡、4.出牌
    repeated HuType     HuType      = 5; // 可胡牌的类型
    repeated int32      GangCards   = 6; // 可杠的牌 出牌时，手牌中可能已经存在多副杠牌
    int32               NewCard     = 7; // 摸到的牌(仅用于出牌)
    repeated int32      HandCards   = 8; // 最新手牌
}

// 玩家操作结果通知
message MahjongBTEOperaNtf {
    int64  OpShortId                   = 1; // 操作者
    ActionType OpType                  = 2; // 操作类型，1.碰、2.杠、3.胡、4.出牌
    int32  HandCardsNum                = 3; // 剩余手牌数量

    // 胡操作结果数据
    MahjongBTEHuResultNtf HuResult     = 4; // 胡结果，触发一炮多响，该字段为null

    // 杠操作结果数据
    MahjongBTEGangResultNtf GangResult = 5; // 杠结果，触发可抢杠，该字段为null
    int32                   GangType   = 6; // 1.明杠、2.暗杠

    int32                   Card       = 7; // 碰、杠、出牌的牌
    int32                   CardIndex  = 8; // 出牌下标
}

// 胡牌信息
message MahjongBTEHuInfo {
    int32             Seat             = 1; // 座位
    HuType            HuType           = 2; // 胡牌类型
    ExtraType         HuExtraType      = 3; // 胡牌额外加番
    int32             HuOrder          = 4; // 当前是第几个胡牌的
}

// 胡牌算分结果通知
// 触发一炮多响，该数据跟随最后一个胡牌的人下发,如果最后一个可胡牌的人选择过,会单独通知此消息
message MahjongBTEHuResultNtf {
    repeated MahjongBTEHuInfo Winner    = 1; // 胡牌的人
    int32            Card               = 2; // 胡的牌
    bool             ZiMo               = 3; // 是否是自摸
    map<int32,int64> LoseScores         = 4; // 赔分的人，map<位置,赔的分>(实时胡牌)
    repeated int64   CurrentScores      = 5; // 东南西北 四个方位最新的分数(实时胡牌)
    int64            ShiftGangScore     = 6; // 杠上炮，呼叫转移的分
    int32            ShiftGangScoreSeat = 7; // 杠上炮，呼叫转移的分分转移给谁
}

// 杠的结果通知
// 1.如果没触发可抢杠胡,随着MahjongBTEOperaNtf通知下发，MahjongBTEOperaNtf的QiangGang字段有效
// 2.如果触发可抢杠胡,会随着可抢人的操作下发该通知
message MahjongBTEGangResultNtf {
    int64 OpShortId              = 1; // 杠的操作者
    int64 QiangGangShortId       = 2; // 抢杠的人，0表示杠成功，否则表示被抢杠
    int32 Card                   = 3; // 杠的牌
    map<int32,int64> LoseScores  = 4; // 赔分的人，map<位置,赔的分>
    repeated int64 CurrentScores = 5; // 东南西北 四个方位最新得分数
}


// 结算玩家数据
message MahjongBTESettlementPlayerData{
    MahjongPlayerInfo Player              = 1; //
    int32 DianPaoSeatIndex                = 2; // 点炮的人位置，如果是自己，表示自摸
    map<int32,int64> ByDarkGangSeatIndex  = 3; // 被哪些人暗杠，map<杠的玩家位置，赔的分>
    map<int32,int64> ByLightGangSeatIndex = 4; // 被哪些人明杠，map<杠的玩家位置，赔的分>
    int32 TotalFan                        = 5; // 总番数
    int64 TotalScore                      = 6; // 总输赢 负数为输
}

// 结算通知
message MahjongBTESettlementNtf {
    bool     NotHu                                     = 1;  // true.流局
    bool     HasScoreZero                              = 2;  // 玩家分输光了，提前进入结算(只有在房间选择不允许负分的时候生效)
    repeated MahjongBTESettlementPlayerData PlayerData = 3; // 东南西北四个方位玩家结算数据
    int32    GameCount                                 = 4; // 游戏局数
    int64    GameSettlementAt                          = 5; // 结算时间
    repeated int32 HuSeatIndex                         = 6; // 胡牌的位置,按胡牌先后位置排序
    repeated int32 NotTingSeat                         = 7; // 哪些位置没听牌
    repeated int32 PigSeat                             = 8; // 哪些位置是花猪
}
